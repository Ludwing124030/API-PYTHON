{
	"info": {
		"_postman_id": "db0672df-3fc1-4ec1-81fe-9a9d3479310f",
		"name": "PladigPsico-LoginRequired",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "VerUsuarios",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Usuarios sean validos\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.listaDeUsuarios).to.be.an(\"array\");\r",
							"    jsonData.listaDeUsuarios.forEach(usuario => \r",
							"          pm.expect(usuario).to.have.all.keys(\"email\", \"especialista\", \"usuarioID\").and.be.an(\"object\")\r",
							"    );\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/usuario",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"usuario"
					]
				}
			},
			"response": []
		},
		{
			"name": "CrearUsuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"usuario creado exitosamente\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"secretaria\",\r\n    \"password\": \"secretaria\",\r\n    \"especialista\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/usuario",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"usuario"
					]
				}
			},
			"response": []
		},
		{
			"name": "EliminarUsuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"usuario eliminado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/usuario/8",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"usuario",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "ActualizarUsuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"usuario actualizado exitosamente\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"usuarioID\": 3,\r\n    \"campo\": \"especialista\",\r\n    \"nuevoValor\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/usuario",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"usuario"
					]
				}
			},
			"response": []
		},
		{
			"name": "VerCitas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Lista de citas son validas\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.listaDeCitas).to.be.an(\"array\");\r",
							"    jsonData.listaDeCitas.forEach(cita => {\r",
							"        pm.expect(cita).to.have.all.keys('paciente', 'horario', 'estadoID', 'comentario').and.to.be.an(\"object\");\r",
							"        pm.expect(cita.estadoID).to.be.a(\"number\");\r",
							"        pm.expect(cita.comentario).to.be.a(\"string\");\r",
							"        //Paciente\r",
							"        pm.expect(cita.paciente).to.have.all.keys('email', 'pacienteID', 'primer_apellido', 'primer_nombre', 'segundo_apellido', 'segundo_nombre', 'telefono').and.to.be.an(\"object\");\r",
							"        pm.expect(cita.paciente.email).to.be.a(\"string\");\r",
							"        pm.expect(cita.paciente.primer_nombre).to.be.a(\"string\");\r",
							"        pm.expect(cita.paciente.segundo_nombre).to.be.a(\"string\");\r",
							"        pm.expect(cita.paciente.primer_apellido).to.be.a(\"string\");\r",
							"        pm.expect(cita.paciente.segundo_apellido).to.be.a(\"string\");\r",
							"        pm.expect(cita.paciente.pacienteID).to.be.a(\"number\");\r",
							"        pm.expect(cita.paciente.telefono).to.be.a(\"number\");\r",
							"        //Horario\r",
							"        pm.expect(cita.horario).to.have.all.keys('horarioID', 'fecha').and.to.be.an(\"object\");\r",
							"        pm.expect(cita.horario.horarioID).to.be.a(\"number\");\r",
							"        pm.expect(cita.horario.fecha).to.be.a(\"string\");\r",
							"    });\r",
							"    // Agregar para validar los objetos del array\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/secretaria/cita",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"secretaria",
						"cita"
					]
				}
			},
			"response": []
		},
		{
			"name": "ActualizarCita",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"cita actualizada\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pacienteID\": 3,\r\n    \"horarioID\": 426,\r\n    \"campo\": \"estado_id\",\r\n    \"nuevoValor\": 2\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/secretaria/cita",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"secretaria",
						"cita"
					]
				}
			},
			"response": []
		},
		{
			"name": "VerPacientes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Lista de pacientes valida\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.listaDePacientes).to.be.an('array');\r",
							"    jsonData.listaDePacientes.forEach(paciente => {\r",
							"        pm.expect(paciente).to.have.all.keys('email', 'pacienteID', 'primer_apellido', 'primer_nombre', 'segundo_apellido', 'segundo_nombre', 'telefono').and.to.be.an(\"object\");\r",
							"        \r",
							"        pm.expect(paciente.email).to.be.a(\"string\");    \r",
							"        pm.expect(paciente.primer_nombre).to.be.a(\"string\");\r",
							"        pm.expect(paciente.segundo_nombre).to.be.a(\"string\");\r",
							"        pm.expect(paciente.primer_apellido).to.be.a(\"string\");\r",
							"        pm.expect(paciente.segundo_apellido).to.be.a(\"string\");\r",
							"        pm.expect(paciente.pacienteID).to.be.a(\"number\");\r",
							"        pm.expect(paciente.telefono).to.be.a(\"number\");\r",
							"    });\r",
							"\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/secretaria/paciente",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"secretaria",
						"paciente"
					]
				}
			},
			"response": []
		},
		{
			"name": "ActualizarPaciente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"informacion del paciente actualizada!\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pacienteID\": 2,\r\n    \"campo\": \"segundo_apellido\",\r\n    \"valor\": \"de Estrada\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/secretaria/paciente",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"secretaria",
						"paciente"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginListaExamenes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Lista de Examenes - LoginRequired\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.listaDeExamenes).to.be.an(\"array\");\r",
							"    jsonData.listaDeExamenes.forEach(examen => {\r",
							"        e = examen.examen\r",
							"        pm.expect(e).to.have.all.keys('examenID', 'codigo', 'fecha_creacion', 'habilitado', 'preguntas', 'titulo').and.to.be.an(\"object\");\r",
							"        pm.expect(e.examenID).to.be.a(\"number\");\r",
							"        pm.expect(e.codigo).to.be.a(\"number\");\r",
							"        pm.expect(e.fecha_creacion).to.be.a(\"string\");\r",
							"        pm.expect(e.habilitado).to.be.a(\"boolean\");\r",
							"        pm.expect(e.titulo).to.be.a(\"string\");\r",
							"        //preguntas\r",
							"        pm.expect(e.preguntas).to.be.an(\"array\");\r",
							"        e.preguntas.forEach(pregunta => {\r",
							"            pm.expect(pregunta).to.have.all.keys('pregunta', 'preguntaID', 'respuestas').and.to.be.an('object');\r",
							"            pm.expect(pregunta.pregunta).to.be.a(\"string\");\r",
							"            pm.expect(pregunta.preguntaID).to.be.a(\"number\");\r",
							"            //respuestas\r",
							"            pm.expect(pregunta.respuestas).to.be.an(\"array\");\r",
							"            pregunta.respuestas.forEach(respuesta => {\r",
							"                pm.expect(respuesta).to.have.all.keys('respuesta', 'respuestaID', 'seleccion').and.to.be.an('object');\r",
							"                pm.expect(respuesta.respuesta).to.be.a('string');\r",
							"                pm.expect(respuesta.respuestaID).to.be.a('number');\r",
							"                pm.expect(respuesta.seleccion).to.be.a('boolean');\r",
							"            });\r",
							"        });\r",
							"        \r",
							"        \r",
							"    });\r",
							"    \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen"
					]
				}
			},
			"response": []
		},
		{
			"name": "CrearExamenConPreguntasYRespuestas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"examen creado exitosamente\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"examen\": {\r\n        \"titulo\": \"MarioEstrada_ElFilosofoChapin\",\r\n        \"fechaCreacion\": \"23-09-2021 20:00:12\",\r\n        \"codigo\": 616,\r\n        \"habilitado\": \"False\",\r\n        \"preguntas\": [\r\n            {\r\n                \"pregunta\": \"vale la pena vivir?\",\r\n                \"preguntaID\": 1,\r\n                \"respuestas\": [\r\n                    {\r\n                        \"respuestaID\": 1,\r\n                        \"respuesta\": \"no\",\r\n                        \"seleccion\": true\r\n                    },\r\n                    {\r\n                        \"respuestaID\": 2,\r\n                        \"respuesta\": \"si\",\r\n                        \"seleccion\": true\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"pregunta\": \"tener un hijo o una hija?\",\r\n                \"preguntaID\": 2,\r\n                \"respuestas\": [\r\n                    {\r\n                        \"respuestaID\": 1,\r\n                        \"respuesta\": \"un hijo puede ser un orgullo\",\r\n                        \"seleccion\": true\r\n                    },\r\n                    {\r\n                        \"respuestaID\": 2,\r\n                        \"respuesta\": \"una hija puede traer un buen marido jeje\",\r\n                        \"seleccion\": true\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen"
					]
				}
			},
			"response": []
		},
		{
			"name": "ActualizarExamen",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"examen actualizado!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"examenID\": 7,\r\n    \"campo\": \"titulo\",\r\n    \"valor\": \"pokemones 101\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen"
					]
				}
			},
			"response": []
		},
		{
			"name": "EliminarExamen",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"examen eliminado exitosamente\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen/5",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "PreguntaCrear",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"pregunta y respuestas creadas!\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"examenID\": 6,\r\n    \"preguntaID\": 3,\r\n    \"pregunta\": \"Ser hedonista o budista?\",\r\n    \"respuestas\": [\r\n        {\r\n            \"respuestaID\": 1,\r\n            \"respuesta\": \"no\",\r\n            \"seleccion\": true\r\n        },\r\n        {\r\n            \"respuestaID\": 2,\r\n            \"respuesta\": \"si\",\r\n            \"seleccion\": true\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen/pregunta",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen",
						"pregunta"
					]
				}
			},
			"response": []
		},
		{
			"name": "PreguntaActualizar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"pregunta actualizada!\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"examenID\": 6,\r\n    \"preguntaID\": 1,\r\n    \"pregunta\": \"somos realmente libres?\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen/pregunta",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen",
						"pregunta"
					]
				}
			},
			"response": []
		},
		{
			"name": "PreguntaEliminar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"pregunta y sus respuestas eliminda\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"examenID\": 6,\r\n    \"preguntaID\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen/pregunta",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen",
						"pregunta"
					]
				}
			},
			"response": []
		},
		{
			"name": "CrearRespuesta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"respuesta creada!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"examenID\": 6,\r\n \"preguntaID\": 1,\r\n \"respuestaID\": 2,\r\n \"respuesta\": \"Si\",\r\n \"seleccion\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen/respuesta",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen",
						"respuesta"
					]
				}
			},
			"response": []
		},
		{
			"name": "ActualizarRespuesta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"respuesta actualizada!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"examenID\": 6,\r\n \"preguntaID\": 1,\r\n \"respuestaID\": 3,\r\n \"campo\": \"seleccion\",\r\n \"valor\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen/respuesta",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen",
						"respuesta"
					]
				}
			},
			"response": []
		},
		{
			"name": "EliminarRespuesta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Valid Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.all.keys('message');\r",
							"    pm.expect(jsonData.message).to.eql(\"respuesta eliminada!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"examenID\": 6,\r\n \"preguntaID\": 1,\r\n \"respuestaID\": 2\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:5000/especialista/examen/respuesta",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "5000",
					"path": [
						"especialista",
						"examen",
						"respuesta"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MzI0Mzk4NjYsImlhdCI6MTYzMjQzNjI2NiwiaXNzIjoicGxhZGlncHNpY286d2ViX3NlcnZpY2UiLCJ1c3VhcmlvIjp7InVzdWFyaW9JRCI6MTAsImVtYWlsIjoic2VjcmV0YXJpYSIsImVzcGVjaWFsaXN0YSI6ZmFsc2V9fQ.D0ZSGFj9U_6zuuZKfaJ1s1vRjjq6KIbTZj-L1P67sDk",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"pm.test(\"Response time is less than 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});",
					"pm.test(\"Content-Type header is application/json\", () => {",
					"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
					"});"
				]
			}
		}
	]
}